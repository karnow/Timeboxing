{"version":3,"sources":["components/Timeboxcreator.js","components/SearchTimebox.js","components/TimeboxesList.js","components/ReadOnlyTimebox.js","components/Timebox.js","components/TimeboxEditor.js","components/EditableTimebox.js","components/TimeboxesManager.js","components/Clock.js","components/Progressbar.js","components/CurrentTimebox.js","lib/time.js","components/UserGreeting.js","components/Header.js","components/InspirationalQuote.js","components/AuthentiactedApp.js"],"names":["TimeboxCreator","state","title","totalTimeInMinutes","handleTitleChange","event","setState","target","value","handleTotalTimeInMinutesChange","handleSubmit","preventDefault","props","onCreate","onSubmit","this","className","onChange","type","step","React","Component","SearchTimebox","refresch","handleSearch","searchQuery","placeholder","onClick","RemainingTimeboxesList","connect","timeboxes","getRemainingTimeboxes","renderTimebox","useSelector","getSearchQuery","console","log","stan","map","ReadOnlyTimebox","timebox","Error","Timebox","onDelete","isEditable","onEdit","onMakeCurrent","disabled","e","TimeboxEditor","handleSubmitForm","onUpdate","id","handleCancel","onCancel","EditableTimebox","ownProps","isEdited","isTimeboxEdited","getisEditable","dispatch","startEditingTimebox","stopEditingTimebox","makeTimeboxCurrent","key","ErrorMessage","hasError","message","children","TimeboxesManager","useDispatch","accessToken","useContext","AuthenticationContext","timeboxesLoading","areTimeboxesLoading","timeboxesLoadingError","getTimeboxesLoadingError","getedFinishedTimboxes","getFinishedTimboxes","hasErrorSelv","useEffect","axiosAllTimeboxes","resetSearchAndCopiesTimeboxes","searchTimebox","searchTimeboxResult","createdTimebox","createTimeboxRemontly","index","indexToUpdate","updateTimebox","onUpdateRemontly","removeTimeboxRemontly","length","RealTimeClock","hours","minutes","secounds","getDate","intervalId","window","setInterval","count","hour","Date","getHours","minute","getMinutes","secound","getSeconds","stopTimer","clearInterval","Clock","seconds","defaultProps","ProgressBar","percent","big","color","progresClasName","classNames","style","width","CurrentTimebox","isRunning","isPaused","isFinished","pausesCount","elpsedTimeInSecounds","handleStart","bind","handleStop","togglePause","prevProps","prevState","onFinish","startTimer","totalTimeInSecounds","Math","min","durationInSecounds","floor","minutesLeft","secoundsLeft","progressInPercent","currentTimebox","getCurrentTimebox","finishCurrentTimebox","UserGreeting","Consumer","jwt","decode","email","getUserEmail","Header","Children","ModalText","textAlign","Portal","container","document","createElement","body","prepend","removeChild","ReactDOM","createPortal","Quote","require","InspirationQuote","useState","getQuote","quote","InspirationqRender","text","author","AuthentiactedApp","LogoutContext","Logout","href"],"mappings":"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","file":"static/js/4.7778b7e9.chunk.js","sourcesContent":["import React from 'react'; \r\n// import v4 from 'uuid/dist/esm-node/v4.js'; \r\n\r\n\r\n// Formularz za pomocą form.elements\r\n// class TimeboxCreator extends React.Component {\r\n\r\n   \r\n// handleSubmit =(event) => {\r\n//                             event.preventDefault();\r\n//                             // alert(`${this.numberInput.value}, ${this.textInput.value}`);\r\n//                             alert(this.form.elements[1].value);\r\n//                             // this.props.onCreate({ title: this.textInput.value, totalTimeInMinutes:this.numberInput.value});\r\n//                             this.props.onCreate({ title: this.form.elements[0].value, totalTimeInMinutes:this.form.elements[1].value});\r\n                            \r\n// }\r\n\r\n// render () {\r\n// return ( <form ref={form =>this.form = form}onSubmit={this.handleSubmit} className=\"TimeboxCreator\" id=\"form\">\r\n            \r\n//          <label>Co robisz? <input ref={input=>this.textInput = input} type=\"text\" /></label><br />\r\n//         <label>Ile minut? <input ref={input=>this.numberInput = input} type=\"number\" /></label><br />\r\n//         <button>Dodaj TimeBox</button>\r\n//     </form>\r\n//     )}\r\n// }\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////\r\n\r\n//  //Formularz niekontrolowany przez Reacta\r\n// class TimeboxCreator extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.titleInput = React.createRef();\r\n//         this.totalTimeInMinutes=React.createRef();\r\n//     }\r\n\r\n\r\n// handleSubmit =(event) => {\r\n//                             event.preventDefault(); \r\n//                             this.props.onCreate({ id: uuid.v4() , title:this.titleInput.current.value , totalTimeInMinutes:this.totalTimeInMinutes.current.value});\r\n//                             console.log(this.titleInput.current);\r\n//                             this.titleInput.current.value=\"\";\r\n//                             this.totalTimeInMinutes.current.value=\"\";\r\n// }\r\n\r\n// render () {\r\n// return ( <form onSubmit={this.handleSubmit} className=\"TimeboxCreator\">\r\n//         <label>Co robisz? <input ref={this.titleInput} type=\"text\" /></label><br />\r\n//         <label>Ile minut? <input ref={this.totalTimeInMinutes} type=\"number\" /></label><br />\r\n//         <button>Dodaj TimeBox</button>\r\n//     </form>\r\n//     )}\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n//Formularz kontrolowany = wartosci wpisane do inputu sa automatycznie przesyłane do stanu komponentu.\r\nclass TimeboxCreator extends React.Component {\r\n\r\n    state ={\r\n        title: \"\",\r\n        totalTimeInMinutes: \"\"\r\n    }\r\n\r\nhandleTitleChange = (event) => {\r\n    this.setState({title: event.target.value});\r\n}\r\n\r\nhandleTotalTimeInMinutesChange = (event) => {\r\n    \r\n    this.setState({totalTimeInMinutes: event.target.value});\r\n}\r\n\r\nhandleSubmit =(event) => {\r\n                            event.preventDefault(); \r\n                            this.props.onCreate({ title:this.state.title , totalTimeInMinutes:this.state.totalTimeInMinutes});\r\n                        \r\n                           this.setState({title: \"\", totalTimeInMinutes: \"\"}); \r\n\r\n}\r\n\r\nrender () {\r\nreturn ( <form onSubmit={this.handleSubmit} className=\"TimeboxCreator\">\r\n        <label>Co robisz? <input value={this.state.title} onChange={this.handleTitleChange} type=\"text\" /></label><br />\r\n        <label>Ile minut? <input value={this.state.totalTimeInMinutes} onChange={this.handleTotalTimeInMinutesChange} type=\"number\" step=\"0.01\" /></label><br />\r\n        <button>Dodaj TimeBox</button>\r\n    </form>\r\n    )}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// KOMPONENT NIEKONTROLOWANY\r\n// nr 1 za pomocą formRef\r\n// class TimeboxCreator extends React.Component {\r\n    //     constructor(props) {\r\n        //       super(props);\r\n        //       this.formRef = React.createRef();\r\n        //     }\r\n        //     handleSubmit = (event) => {\r\n            //       event.preventDefault();\r\n            //       //console.log(this.formRef.current[0])\r\n            //       if (\r\n                //         this.formRef.current[0].value.length < 3 ||\r\n                //         this.formRef.current[1].value <= 0\r\n                //       )\r\n                //         return;\r\n                //       this.props.onCreate({\r\n                    //         id: uuid.v4(),\r\n                    //         title: this.formRef.current[0].value,\r\n                    //         totalTimeInMinutes: this.formRef.current[1].value,\r\n                    //       });\r\n                    //       this.formRef.current[0].value = \"\";\r\n                    //       this.formRef.current[1].value = \"\";\r\n                    //     };\r\n                    //     render() {\r\n                        //       const { isEditable } = this.props;\r\n                        //       return (\r\n                            //         <form\r\n                            //           onSubmit={this.handleSubmit}\r\n                            //           className={`TimeboxCreator ${!isEditable ? \"\" : \"inactive\"}`}\r\n                            //           ref={this.formRef}\r\n                            //         >\r\n                            //           <label>\r\n                            //             Co robisz?\r\n                            //             <input type=\"text\" />\r\n//           </label>\r\n//           <br />\r\n//           <label>\r\n//             Ile minut?\r\n//             <input type=\"number\" />\r\n//           </label>\r\n//           <br />\r\n//           <button>Dodaj Timebox</button>\r\n//         </form>\r\n//       );\r\n//     }\r\n//   }\r\n// \r\n    export default TimeboxCreator;","import React from 'react';\r\n\r\n\r\nfunction SearchTimebox ({refresch, handleSearch, handleSubmit,searchQuery}) {\r\n\r\n    return (\r\n   \r\n    <div className=\"Timebox\">\r\n                <form onSubmit={handleSubmit} >\r\n                <label>Wyszukiwanie timboxów <input value={searchQuery} onChange={handleSearch} placeholder=\"Search\" type=\"text\" /></label>\r\n                <button>Wyszukaj timeboxy</button>\r\n                \r\n                <button onClick={refresch}>Odswież</button>\r\n                </form>\r\n                </div>\r\n                 )\r\n    }\r\n\r\n\r\n\r\nexport default SearchTimebox;","// import React, {useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {connect, useStore} from 'react-redux';\r\nimport { getAllTimeboxes, getRemainingTimeboxes, getSearchQuery } from '../reducers';\r\n\r\n// import {useForceUpdate} from \"./TimeboxesManager\";\r\n\r\n// import Timebox from './ReadOnlyTimebox';\r\n\r\nexport function TimeboxesList ({renderTimebox ,timeboxes}) {\r\n    // console.log(timeboxes)\r\n    const searchQuery=useSelector(state=>getSearchQuery(state));\r\n    console.log(searchQuery)\r\n    const stan=useSelector(state=>(state));\r\n    console.log(stan)\r\n    return timeboxes.map(renderTimebox)\r\n    \r\n\r\n}\r\n\r\n//podłaczenie TimeboxesList Do stanu Redux'a przez funkcje Connect\r\n// const mapStateToProps = (state) => ({timeboxes: getAllTimeboxes(state)});\r\n// export const AllTimeboxesList = connect(mapStateToProps)(TimeboxesList);\r\n\r\n\r\n\r\n// export const AllTimeboxesList = connect(\r\n//     (state) => ({timeboxes: getAllTimeboxes(state)}))(TimeboxesList);\r\n    \r\n    \r\nexport const RemainingTimeboxesList = connect(\r\n        (state) => ({timeboxes: getRemainingTimeboxes(state)}))(TimeboxesList);\r\n\r\n","import React from 'react';\r\n// import TimeboxEdition from './Timeboxedition';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ReadOnlyTimebox ({timebox}) {\r\n    const {title, totalTimeInMinutes} = timebox;\r\n\r\n    ReadOnlyTimebox.propTypes={\r\n        timebox:PropTypes.object,\r\n       \r\n        \r\n    }\r\n    \r\n\r\n       \r\n        if (totalTimeInMinutes <= 0 ){\r\n            throw new Error(\"całkowity czas musi być większy niż zero\");\r\n        }\r\n        return (\r\n            <div className=\"Timebox\">\r\n        \r\n                \r\n                <h3>{title} - {totalTimeInMinutes} min. </h3>\r\n                \r\n                \r\n               \r\n                </div>  \r\n            \r\n        )\r\n        \r\n    }\r\n\r\n\r\n    export default ReadOnlyTimebox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Timebox ({timebox, onDelete, isEditable,onEdit, onMakeCurrent}) {\r\n    const {title, totalTimeInMinutes} = timebox;\r\n\r\n    Timebox.propTypes={\r\n        timebox:PropTypes.object,\r\n        isEditable:PropTypes.bool,\r\n        onDelete:PropTypes.func.isRequired,\r\n       \r\n        \r\n        \r\n    }\r\n    \r\n    function zorpoznanie(e){\r\n        console.log('to jest zdarzenie: ',e.type);\r\n       \r\n    onDelete();\r\n\r\n    }\r\n\r\n        //const {title, totalTimeInMinutes}=props;\r\n        if (totalTimeInMinutes <= 0 ){\r\n            // throw new Error(\"całkowity czas musi być większy niż zero\");\r\n        }\r\n        return(\r\n            <div className=\"Timebox\">\r\n                <h3>{title} - {totalTimeInMinutes} min. </h3>\r\n                <button disabled={isEditable} onClick={zorpoznanie}>Usuń</button>\r\n                <button disabled={isEditable} onClick={onEdit}>Zmień</button>\r\n                <button disabled={isEditable} onClick={onMakeCurrent}>Zacznij teraz</button>\r\n                </div>  \r\n               ) \r\n            }\r\n                \r\n                \r\n               \r\n export default Timebox;\r\n        \r\n        \r\n    \r\n               \r\n       \r\n               \r\n       \r\n        \r\n\r\n","import React from 'react';\r\n\r\nclass TimeboxEditor extends React.Component {\r\n\r\n    state ={\r\n\r\n        title:this.props.title,\r\n        totalTimeInMinutes:this.props.totalTimeInMinutes,\r\n    }\r\n    handleTitleChange = (event) => {\r\n    this.setState({title: event.target.value});\r\n    console.log(this.state.title);\r\n}\r\n    handleTotalTimeInMinutesChange = (event) => {\r\n    this.setState({totalTimeInMinutes: event.target.value});\r\n}\r\n\r\nhandleSubmitForm = (event) => {\r\n    console.log(\"submit działa\");\r\nevent.preventDefault();\r\nconst {title, totalTimeInMinutes} =this.state;\r\nthis.props.onUpdate(this.props.id, { id:this.props.id, title, totalTimeInMinutes});\r\n}\r\n\r\n\r\nhandleCancel = () => {\r\n   this.props.onCancel();\r\n}\r\n\r\n\r\n\r\nrender () {\r\n    const {title, totalTimeInMinutes} = this.state;\r\n    console.log(this.props.id);\r\n    console.log(this.state.title);\r\n    \r\n\r\n    return (\r\n       <div className=\"Timebox\">\r\n    <form onSubmit={this.handleSubmitForm}>\r\n         \r\n            <input type=\"text\" onChange={this.handleTitleChange} value={title}/>\r\n            <input type=\"number\" step=\"0.01\" onChange={this.handleTotalTimeInMinutesChange} value={totalTimeInMinutes} />\r\n            <button type=\"submit\">edytuj</button>\r\n            <button type=\"button\" onClick={this.handleCancel}>anuluj</button>\r\n            \r\n    </form>\r\n    </div>\r\n    )\r\n            \r\n\r\n\r\n}\r\n\r\n}\r\n\r\nexport default TimeboxEditor;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {isTimeboxEdited, getisEditable } from '../reducers';\r\nimport Timebox from './Timebox';\r\nimport TimeboxEditor from './TimeboxEditor';\r\nimport {startEditingTimebox, stopEditingTimebox, makeTimeboxCurrent} from '../actions'\r\n\r\nconst mapStatetoProps = (state, ownProps) => ({\r\n    isEdited: isTimeboxEdited(state,ownProps.timebox),\r\n    isEditable: getisEditable(state)\r\n    \r\n})\r\n\r\n//ownProps są to propsy komponentu który przyłączamy\r\nconst mapDispatchtoProps = (dispatch, ownProps) => {\r\n    const onEdit = () =>dispatch(startEditingTimebox(ownProps.timebox));\r\n    const onCancel = ()=> dispatch(stopEditingTimebox());\r\n    const onMakeCurrent =()=>dispatch(makeTimeboxCurrent(ownProps.timebox));\r\n    return {onEdit, onCancel, onMakeCurrent};\r\n}\r\n\r\nexport const EditableTimebox= connect(mapStatetoProps, mapDispatchtoProps)(function EditableTimebox({ timebox, isEdited, onEdit, onCancel, onUpdate, onDelete, isEditable, onMakeCurrent }) {\r\n    return(\r\n    <>\r\n        {isEdited ?\r\n            <TimeboxEditor\r\n                id={timebox.id}\r\n                title={timebox.title}\r\n                totalTimeInMinutes={timebox.totalTimeInMinutes}\r\n                onUpdate={onUpdate}\r\n                onCancel={onCancel} />\r\n\r\n            :\r\n            <Timebox\r\n                key={timebox.id}\r\n                timebox={timebox}\r\n                isEditable={isEditable}\r\n                onDelete={onDelete}\r\n                onEdit={onEdit}\r\n                onMakeCurrent={onMakeCurrent} />\r\n                }\r\n    </>\r\n    )\r\n})\r\n","import React, {useContext, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n// import uuid from 'uuid'; \r\nimport TimeboxCreator from './Timeboxcreator';\r\nimport ErrorBoundaries from './Error';\r\nimport SearchTimebox from './SearchTimebox';\r\n\r\nimport AuthenticationContext from '../contexts/AuthenticationContext';\r\nimport {RemainingTimeboxesList} from './TimeboxesList';\r\nimport ReadOnlyTimebox from './ReadOnlyTimebox';\r\nimport {areTimeboxesLoading, getTimeboxesLoadingError, getSearchQuery,hasErrorSelv, getFinishedTimboxes} from '../reducers';\r\nimport {axiosAllTimeboxes ,createTimeboxRemontly , removeTimeboxRemontly, onUpdateRemontly, searchTimebox,searchTimeboxResult, resetSearchAndCopiesTimeboxes} from '../actions';\r\nimport { EditableTimebox } from './EditableTimebox';\r\n\r\n\r\n\r\n\r\n\r\nfunction TimeboxesManager () {\r\n\r\nconst dispatch =useDispatch();\r\n\r\nconst {accessToken} = useContext(AuthenticationContext);\r\nconst searchQuery=useSelector(state=>getSearchQuery(state));\r\nconst timeboxesLoading=useSelector(state=> areTimeboxesLoading(state));\r\nconst timeboxesLoadingError=useSelector(state=> getTimeboxesLoadingError(state));\r\nconst getedFinishedTimboxes=useSelector(state=>getFinishedTimboxes(state));\r\n\r\nconst hasError=useSelector(state=>hasErrorSelv(state));\r\nconst state = useSelector(state=>state)\r\nconsole.log(state);\r\nuseEffect(()=>{\r\n\r\ndispatch(axiosAllTimeboxes(accessToken))\r\n\r\n},[]) \r\n\r\nconst handleCreate= (createdTimebox)=> dispatch(createTimeboxRemontly(createdTimebox,accessToken)) \r\n\r\n    \r\n   //poniżej użycie render props\r\n   const renderTimebox =(timebox,index)=>{\r\n    \r\nconst onUpdate = (indexToUpdate, updateTimebox)=>dispatch(onUpdateRemontly(indexToUpdate, updateTimebox,accessToken));     \r\n       \r\nconst onDelete= ()=> dispatch(removeTimeboxRemontly(timebox, accessToken));\r\n            \r\n        \r\n       \r\n       return <EditableTimebox\r\n           \r\n            timebox={timebox}\r\n            onUpdate={onUpdate}\r\n            onDelete={onDelete}\r\n            />\r\n\r\n       }\r\n           \r\n       \r\n     function renderReadOnlyTimebox (timebox) {\r\n       \r\n       return (\r\n           <>\r\n          <strong>\"Aktualny Edytowany Timebox\"</strong> \r\n       <ReadOnlyTimebox\r\n           key={timebox.id}\r\n           timebox={timebox}\r\n           \r\n            />\r\n           </>\r\n       )\r\n       }\r\n    \r\n       \r\n       return (\r\n           <>\r\n           \r\n            <SearchTimebox \r\n            refresch={()=>dispatch(resetSearchAndCopiesTimeboxes())} \r\n            handleSearch={(event)=>dispatch(searchTimebox(event))}\r\n            handleSubmit={(event)=>dispatch(searchTimeboxResult(event, accessToken))} \r\n            searchQuery={searchQuery}\r\n            /> \r\n            \r\n            {/* poniższy przykład renderowania poprzez selektory jakiś danych */}\r\n            {/* {isAnyTimeboxEdited(state) ? renderReadOnlyTimebox(getCurrentlyEditedTimebox(state)): <strong>W tej chwili nie edytujemy żadnego Timebox'a</strong>} */}\r\n           \r\n            <ErrorMessage hasError={hasError} message=\"POdałeś nie prawidłową wartość\">  \r\n           <TimeboxCreator onCreate={handleCreate}/>\r\n               </ErrorMessage>\r\n   \r\n           {timeboxesLoading ? \"Timeboxy is loading...\": null}\r\n           {timeboxesLoadingError ? \"Nie udało się załadować\":null}\r\n           {console.log(timeboxesLoadingError)}\r\n           \r\n           <ErrorBoundaries message=\"coś się wykrzaczyło :(\">\r\n   \r\n               <RemainingTimeboxesList \r\n                   renderTimebox={renderTimebox} //ładowanie wzorca\r\n                             \r\n                   />\r\n                    \r\n           </ErrorBoundaries>\r\n           {getedFinishedTimboxes.length===0 ? (\r\n           null\r\n\r\n           ): (\r\n           <>\r\n            {console.log(getedFinishedTimboxes)}\r\n            <h3>Ukończone zadania</h3>\r\n            {getedFinishedTimboxes.map((timebox) => <ReadOnlyTimebox key={timebox.id} timebox={timebox}/>)}\r\n            \r\n            </>)\r\n           \r\n           }\r\n\r\n           \r\n           \r\n           </>\r\n       \r\n       )\r\n   }\r\n   \r\n   \r\n   function ErrorMessage ({hasError, message, children}) {\r\n       \r\n       return hasError ? message : children;\r\n     }\r\n       \r\n    \r\n   \r\n   \r\n   export default TimeboxesManager;\r\n                   \r\n                  \r\n                   \r\n                   \r\n       \r\n   \r\n   \r\n   \r\n   \r\n                   \r\n                   \r\n                   \r\n               \r\n             \r\n   \r\n   \r\n   \r\n    \r\n\r\n\r\n\r\n\r\n          \r\n\r\n\r\n\r\n       \r\n\r\n\r\n\r\n\r\n    ","\r\n\r\nimport React from 'react';\r\n// import { render } from 'node-sass';\r\n\r\nfunction Clock ({className, minutes, seconds}) {\r\n\r\n    Clock.defaultProps ={\r\n        className:\"\",\r\n        minutes:33,\r\n        secounds:11\r\n\r\n    }\r\n  \r\n    return (\r\n    <>\r\n    <h2 className={\"clock \" + className}>Pozostało <span className=\"clock__minutes clock--italic\">{minutes}</span><span className=\"clock__dwukropek\">:</span><span className=\"clock__secunds clock--italic\">{seconds}</span></h2>\r\n    <RealTimeClock/>\r\n    </>\r\n    )\r\n}\r\n// komponent zegar w czasie rzeczywistym\r\nclass RealTimeClock extends React.Component {\r\nstate={\r\n    hours: 0,\r\n    minutes: 0,\r\n    secounds: 0,\r\n\r\n}\r\ncomponentDidMount(){\r\n    this.getDate();\r\n}\r\n\r\ncomponentWillUnmount(){\r\n    this.stopTimer();\r\n}\r\n\r\n\r\ngetDate=() =>{\r\n    \r\nthis.intervalId = window.setInterval(() => {\r\n    console.count(\"liczę zegar\");\r\n    let hour = new Date().getHours();\r\n    let minute = new Date().getMinutes();\r\n    let secound = new Date().getSeconds();\r\n        \r\n    this.setState({hours:hour, minutes:minute, secounds:secound})\r\n}, 1000);\r\n\r\n}\r\nstopTimer=()=>{\r\n    window.clearInterval(this.intervalId);\r\n}\r\n\r\nrender(){ \r\n    \r\n    return (\r\n    <h2 className={\"clock \"}>Aktualny Czas <span className=\"clock__minutes\">{this.state.hours}</span>:<span className=\"clock__minutes\">{this.state.minutes}</span>.<span className=\"clock__secunds\">{this.state.secounds}</span></h2>\r\n        )\r\n    }\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n\r\nexport default Clock;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction ProgressBar({ className = \"\", percent=33, big=false,  color=null}) {\r\n\r\n        let progresClasName = classNames(\r\n            \"progress\",\r\n            className,\r\n            {\r\n            \"progress--big\": big,\r\n            \"progress--color-red\":color === \"red\",\r\n            \"progress--color-blue\":color === \"blue\",\r\n            \"progress--color-green\":color === \"green\"\r\n            }\r\n        )\r\n\r\n        function validRange (props, propName, componentName){\r\n\r\n            if(props[propName] >100 || props[propName] <0) {\r\n                return new Error(`Invalid prop ${propName} issued to component ${componentName}. the valid range is from 0 to 100` )\r\n            }\r\n        }\r\n\r\n        function defaultColor  (props, propName, componentName){\r\n\r\n            if(props[propName] !==\"red\" || props[propName] !==\"green\" || props[propName] !==\"blue\") {\r\n                return new Error(`Invalid prop ${propName} issued to component ${componentName}. the color should be red, blue or green` )\r\n            }\r\n        }\r\n        \r\n        ProgressBar.propTypes= {\r\n            big: PropTypes.bool,\r\n            percent: PropTypes.number, \r\n            percent: PropTypes.any, \r\n            percent: validRange,\r\n            color: defaultColor\r\n            \r\n        }\r\n\r\n    \r\n\r\n        \r\n            return (\r\n                <div className={progresClasName}>\r\n                    <div className=\"progress__bar\" style={{width: `${percent}%`}}></div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        export default ProgressBar;\r\n\r\n    \r\n        \r\n \r\n    ","import React from 'react';\r\nimport Clock from './Clock';\r\nimport ProgressBar from './Progressbar';\r\nimport {getMinutesAndSecoundsFromDurationInSecounds} from \"../lib/time\";\r\nimport { getCurrentTimebox } from '../reducers';\r\nimport {finishCurrentTimebox, addTimeboxFinished} from '../actions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass CurrentTimebox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            isRunning:false,\r\n            isPaused:false,\r\n            isFinished: false,\r\n            pausesCount:0,\r\n            elpsedTimeInSecounds : 0,\r\n            \r\n        }\r\n\r\n        this.handleStart = this.handleStart.bind(this)\r\n        this.handleStop = this.handleStop.bind(this)\r\n        this.togglePause = this.togglePause.bind(this)\r\n        this.intervalId = null;\r\n\r\n}\r\n\r\ncomponentDidMount(){\r\n\r\n    console.count(\"componentDidMount\")\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n    if (!prevState.isFinished && this.state.isFinished) {\r\n        this.props.onFinish();\r\n    }\r\n    console.count(\"componentDid Update\")\r\n}\r\n\r\ncomponentWillUnmount(){\r\n    console.count(\"componentwillUnmount\");\r\n    this.stopTimer();\r\n}\r\n    \r\nhandleStart(event) {\r\n//    const {karol}=this.state;\r\n//     console.log(karol);\r\n    this.setState({\r\n        isRunning:true\r\n        //elpsedTimeInSecounds : 15*60 + 25\r\n    })\r\n    this.startTimer();\r\n}\r\n\r\nhandleStop(event) {\r\n    this.setState({\r\n        isRunning:false,\r\n        isPaused: false,\r\n        pausesCount:0,\r\n        elpsedTimeInSecounds : 0\r\n    })\r\n    this.stopTimer();\r\n}\r\n\r\n    startTimer(){\r\n        if (this.intervalId === null) {\r\n        this.intervalId = window.setInterval(() => {\r\n            console.log(\"timer works\");\r\n            this.setState(\r\n                (prevState) => {\r\n                    const  {totalTimeInMinutes } = this.props;\r\n                    const totalTimeInSecounds = totalTimeInMinutes * 60;\r\n                    const elpsedTimeInSecounds = Math.min(prevState.elpsedTimeInSecounds + 0.1, totalTimeInSecounds)\r\n                    const isFinished = prevState.isFinished || elpsedTimeInSecounds >= totalTimeInSecounds;\r\n                    if (isFinished) {\r\n                        this.stopTimer();\r\n                    }\r\n                    const isRunning = prevState.isRunning && !isFinished;\r\n                    const isPaused = prevState.isPaused && !isFinished;\r\n                    return {elpsedTimeInSecounds, isFinished, isRunning, isPaused}\r\n                }\r\n            )\r\n        }, 100);\r\n    }\r\n    }\r\n       \r\n    stopTimer(){\r\n        window.clearInterval(this.intervalId);\r\n        this.intervalId = null;\r\n    }\r\n\r\n    togglePause() {\r\n       \r\n        //this.setState({isPaused: !this.state.isPaused}) \r\n        this.setState(\r\n            function (prevState){\r\n                \r\n                const isPaused = !prevState.isPaused;\r\n                if(isPaused) {\r\n                    this.stopTimer();\r\n                }else {\r\n                    this.startTimer();\r\n                }\r\n                return {\r\n                   isPaused,\r\n                   pausesCount: isPaused ? prevState.pausesCount +1 : prevState.pausesCount\r\n\r\n\r\n                }\r\n\r\n            }\r\n        )\r\n    }     \r\n    \r\n    render() { \r\n        \r\n        const {isFinished, isPaused, isRunning, pausesCount, elpsedTimeInSecounds} = this.state;\r\n        const {title, totalTimeInMinutes} = this.props;\r\n        const totalTimeInSecounds=totalTimeInMinutes*60;\r\n        const timeLeftInSecounds= totalTimeInSecounds - elpsedTimeInSecounds;\r\n        \r\n        const [minutesLeft, secoundsLeft] = getMinutesAndSecoundsFromDurationInSecounds(timeLeftInSecounds);\r\n        \r\n        const progressInPercent = (elpsedTimeInSecounds / totalTimeInSecounds) * 100;\r\n        return (\r\n                <div className=\"CurrentTimebox\">\r\n                    <h1>{title}</h1>\r\n                    <Clock minutes={minutesLeft} seconds={secoundsLeft} className={isPaused ? \"inactive\" : \"\"}/>\r\n                    <ProgressBar percent={progressInPercent} className={isPaused ? \"inactive\" : \"\"} big color=\"white\"/>\r\n                    \r\n                    <button onClick={this.handleStart} disabled={isRunning || isFinished}>Start</button>\r\n                    <button onClick={this.handleStop} disabled={!isRunning}>Stop</button>\r\n                    <button onClick={this.togglePause} disabled={!isRunning}>{isPaused ? \"wznów\" : \"pauzuj\"}</button>\r\n                    Liczba przerw: {pausesCount}\r\n                </div>)\r\n                    \r\n\r\n            }\r\n}   \r\n\r\nfunction CurrentTimeboxOrNothing({ currentTimebox, onFinish }) {\r\n    if (currentTimebox) {\r\n        const {title, totalTimeInMinutes}= currentTimebox;\r\n    return <CurrentTimebox title={title} totalTimeInMinutes={totalTimeInMinutes} onFinish={onFinish}/>\r\n\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStatetoProps(state) {\r\n    const currentTimebox = getCurrentTimebox(state);\r\n    \r\n    console.log(currentTimebox);\r\n\r\n    return {currentTimebox}\r\n    \r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps){\r\n    console.log(\"usuwam ja mapdispachyo props\");\r\n    const onFinish = () =>{ dispatch(finishCurrentTimebox(ownProps.currentTimebox)); }\r\n    return {onFinish}\r\n    \r\n\r\n    }\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CurrentTimeboxOrNothing);","function getMinutesAndSecoundsFromDurationInSecounds(durationInSecounds) {\r\n    const minutes = Math.floor(durationInSecounds/60);\r\n    const secound = Math.floor(durationInSecounds%60);\r\n    return [minutes, secound];\r\n     }\r\n\r\n\r\n     function fib(x) {\r\n        return x <= 1 ? x : fib(x-2) + fib(x-1)\r\n        }\r\n\r\n\r\n     \r\n\r\n     export {\r\n         getMinutesAndSecoundsFromDurationInSecounds, fib\r\n     };","import React from \"react\";\r\nimport jwt from 'jsonwebtoken';\r\nimport AuthenticationContext from \"../contexts/AuthenticationContext\";\r\n\r\n\r\n\r\nfunction UserGreeting(props) {\r\n    \r\n    return (\r\n    <AuthenticationContext.Consumer>\r\n        {\r\n    ({accessToken})=> <> Witaj {getUserEmail(accessToken)} </>\r\n        }\r\n    </AuthenticationContext.Consumer> \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(accessToken) {\r\n    const decodeToken = jwt.decode(accessToken);\r\n    return decodeToken.email\r\n}","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport UserGreeting from './UserGreeting';\r\n\r\nfunction Header ({children}) {\r\n  // zliczanie przez react ilośc dzieci\r\n  if (React.Children.count(children)<1) {\r\n    throw new Error (\"Header har to have at least one child\")\r\n  }\r\n\r\n\r\n    return (\r\n        \r\n        <header className=\"header\">\r\n            <ModalText>\r\n        <h5 style={{textAlign:\"center\"}}>The cake is a like - this is Portal</h5>\r\n        </ModalText>\r\n        <UserGreeting/>\r\n        {children}\r\n                \r\n        </header>\r\n    ) ;\r\n}\r\nexport default Header;\r\n\r\n\r\n/////POrtal przy użyciu komponentu\r\n\r\nfunction ModalText ({children}) {\r\n\r\nreturn(\r\n<Portal>\r\n    {children}\r\n    </Portal>\r\n)\r\n}\r\n\r\n\r\n\r\nclass Portal extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.container = document.createElement(\"div\");\r\n    }\r\n    componentDidMount() {\r\n      document.body.prepend(this.container);\r\n    }\r\n    componentWillUnmount() {\r\n      document.body.removeChild(this.container);\r\n    }\r\n    render() {\r\n      return ReactDOM.createPortal(this.props.children, this.container);\r\n    }\r\n  }\r\n","// import inspirational-quotes from \"inspirational\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n// import React from 'react'; \r\n\r\n// użycie komponentu klasowego\r\n// class InspirationQuote extends React.Component {\r\n// state = {\r\n//     quote : null\r\n// }\r\n\r\n// componentDidMount () {\r\n//     import(\"inspirational-quotes\").then(\r\n//         (Quotes)=>{this.setState({quote: Quotes.getQuote()})}\r\n//     ).catch(()=> console.log(\"Couldn't load quotes\"));\r\n// }\r\n\r\n//  render () {\r\n  \r\n//     return (\r\n//         <>\r\n//         {this.state.quote ?\r\n//         <figure>\r\n//         <blockquote>{this.state.quote.text}</blockquote>\r\n\r\n//         <figcaption><cite>{this.state.quote.author}</cite></figcaption>\r\n//                 </figure> :\r\n//             \"...\"\r\n//         }\r\n//         </>\r\n//     )\r\n//  }\r\n// }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n// Użycie komponentu funkcyjnego z hookiem useEffect\r\n// const InspirationQuote = () => {\r\n//   const [quote, setQuote] = useState();\r\n\r\n//   useEffect(() => {\r\n//     import(\"inspirational-quotes\")\r\n//       .then(Quotes => {\r\n//         setQuote(Quotes.getQuote());\r\n//       })\r\n//       .catch(() => console.log(\"Couldn't load quotes\"));\r\n//   });\r\n\r\n//   return (\r\n    // <>\r\n    //   {quote ? \r\n    //       (\r\n    //   <figure>\r\n    //           <blockquote>{text}</blockquote>\r\n    //           <figcaption>\r\n    //             <cite>{author}</cite>\r\n    //           </figcaption>\r\n    //         </figure>\r\n    //         ) : (\r\n    //           \"...\"\r\n    //           )}\r\n    //   </>\r\n    //     );\r\n    // };\r\n    \r\n     \r\n//Użycie komponentu 1 funkcyjnego-kontenerowego z logika 2 funkcyjnego prezentacyjnego \r\n\r\nconst Quote = require('inspirational-quotes');\r\n\r\n\r\nfunction InspirationQuote (){\r\n  const [quote, setQuote] = useState(Quote.getQuote());\r\n  \r\n  return (<>\r\n   \r\n  <InspirationqRender \r\n       quote={quote}\r\n        text={quote.text} \r\n        author={quote.author}/> \r\n       \r\n    \r\n       </>);\r\n     };\r\n\r\n   \r\n\r\nexport default InspirationQuote;\r\n\r\nfunction InspirationqRender ({quote, text, author}) {\r\n\r\nreturn (\r\n  <>\r\n  {quote ? \r\n      (\r\n  <figure>\r\n          <blockquote>{text}</blockquote>\r\n          <figcaption>\r\n            <cite>{author}</cite>\r\n          </figcaption>\r\n        </figure>\r\n         ) : (\r\n          \"...\"\r\n          )}\r\n  </>\r\n)\r\n}","import React from \"react\";\r\nimport TimeboxesManager from './TimeboxesManager';\r\nimport CurrentTimebox from './CurrentTimebox';\r\nimport Header from './Header';\r\nimport InspirationQuote from \"./InspirationalQuote\";\r\nimport LogoutContext from \"../contexts/LogoutContext\";\r\n\r\n\r\nfunction AuthentiactedApp (props) {\r\n\r\n\r\n    return (\r\n    <>\r\n    <Header>\r\n        <LogoutContext.Consumer>\r\n            {\r\n        ({Logout})=> <> <a onClick={Logout} className=\"header__logout-link\" href=\"#\"> Wyloguj się</a> </>\r\n            }\r\n        </LogoutContext.Consumer> \r\n        \r\n    \r\n    </Header>\r\n    <TimeboxesManager />     \r\n    <CurrentTimebox/>\r\n    <InspirationQuote/>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default AuthentiactedApp;"],"sourceRoot":""}